import sys
import unittest

from contextlib import redirect_stdout

def parse(content: str):
    return [line.strip() for line in content.split("\n") if len(line.strip()) ]


def part1(content: str):
    parsed = parse(content)
    return 0


def part2(content: str) -> int:
    parsed = parse(content)
    return 0


class Test{DAY_XX}(unittest.TestCase):
    def setUp(self) -> None:
        self.input = """__SAMPLE__"""

        self.stdout = sys.stdout
        sys.stdout = sys.stderr
        return super().setUp()

    def tearDown(self) -> None:
        sys.stdout = self.stdout

    def test_part_1(self):
        got = part1(self.input)
        self.assertEqual(got, -9999999)

    def test_part_2(self):
        got = part2(self.input)
        self.assertEqual(got, -9999999)



def main():
    inp = open("./in.txt", 'r').read()
    with redirect_stdout(None):
        p1 = part1(inp)
        p2 = part2(inp)

    print(f"{p1=}\n{p2=}")

    unittest.main(argv=sys.argv[:1])

    return 0


if __name__ == "__main__":
    main()



